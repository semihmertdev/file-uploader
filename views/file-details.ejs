<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Details</title>
  <!-- Bootstrap CSS -->
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #e9ecef;
    }
    .container {
      margin-top: 50px;
    }
    .card {
      border-radius: 0.75rem;
      text-align: center;
      background-color: #ffffff;
      border: 1px solid #dee2e6;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .card-title {
      font-size: 1.5rem;
      font-weight: 600;
    }
    .btn-actions {
      margin-top: 20px;
      display: flex;
      justify-content: center;
      gap: 15px;
    }
    .btn-back {
      margin-top: 20px;
      display: block;
      width: fit-content;
      margin-left: auto;
      margin-right: auto;
    }
    .btn-icon {
      font-size: 1.25rem;
    }
    .modal-content {
      border-radius: 0.75rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card shadow-sm">
      <div class="card-body">
        <h1 class="card-title">File Details</h1>
        <ul class="list-group list-group-flush">
          <li class="list-group-item">
            <strong>Name:</strong> <%= file.name %>
          </li>
          <li class="list-group-item">
            <strong>Size:</strong> <span id="fileSize" data-size="<%= file.size %>"></span>
          </li>
          <li class="list-group-item">
            <strong>Uploaded At:</strong> <span id="uploadedAt" data-uploaded-at="<%= file.uploadTime %>"></span>
          </li>
        </ul>
        <div class="btn-actions">
          <a href="<%= file.path %>" class="btn btn-primary" download>Download File</a>
          <button class="btn btn-danger" data-toggle="modal" data-target="#deleteModal">Delete File</button>
        </div>
        <a href="/dashboard" class="btn btn-secondary btn-back">Back to Dashboard</a>
      </div>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete this file?
        </div>
        <div class="modal-footer">
          <form action="/files/<%= file.id %>/delete" method="POST" id="deleteForm">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-danger">Delete</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS and dependencies -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <!-- JavaScript to format the date and file size -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const fileSizeElement = document.getElementById('fileSize');
      const uploadedAtElement = document.getElementById('uploadedAt');

      // Function to format file size
      function formatFileSize(size) {
        if (size >= 1073741824) {
          return (size / 1073741824).toFixed(2) + ' GB';
        } else if (size >= 1048576) {
          return (size / 1048576).toFixed(2) + ' MB';
        } else if (size >= 1024) {
          return (size / 1024).toFixed(2) + ' KB';
        } else {
          return size + ' bytes';
        }
      }

      // Function to format date
      function formatDate(date) {
        const options = { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' };
        return new Intl.DateTimeFormat('en-US', options).format(date);
      }

      // Get and format file size
      const fileSize = parseInt(fileSizeElement.getAttribute('data-size'), 10);
      fileSizeElement.textContent = formatFileSize(fileSize);

      // Get and format uploaded date
      const uploadedAt = new Date(uploadedAtElement.getAttribute('data-uploaded-at'));
      uploadedAtElement.textContent = formatDate(uploadedAt);
    });
  </script>
</body>
</html>
